---
network_interfaces_role_enabled: false

# Leave empty not to apply changes
network_interfaces__change_strategy: ''

# Example for apply changes via command strategy:
# network_interfaces__change_strategy: command
# network_interfaces__change:
#   - cmd: ifreload -a

# Example for apply changes via service strategy:
# network_interfaces__change_strategy: service
# network_interfaces__change:
#   - name: networking
#     state: restarted

network_interfaces__dir: /etc/network
network_interfaces__file: interfaces
network_interfaces__file_destination: "{{ network_interfaces__dir + '/' + network_interfaces__file }}"

# Seggrate network interfaces into separate files i.e. /etc/network/interfaces.d/eth0
# This has not been implemented yet
# TODO: Implement this feature
network_interfaces__segregate: false
network_interfaces__seggregate_dir: "{{ network_interfaces__dir }}/interfaces.d"

# Keep the lo interface in the file
network_interfaces__keep_lo: true
# The location of the source line in the file (controversial topic)
network_interfaces__source_position: bottom
network_interfaces__source_line: "source {{ network_interfaces__seggregate_dir }}/*"

network_interfaces__backup: true
network_interfaces__template: network_interfaces.j2
# This has not been implemented yet
# TODO: Implement this feature
network_interfaces__iface_template: network_interfaces.iface.j2

# iface XXX inet {manual|static|dhcp}
# Manual method only INCLUDES selected options whereas static and dhcp methods EXCLUDES selected options
network_interfaces__manual_includes: []
network_interfaces__static_excludes: []
network_interfaces__dhcp_excludes: [
  'address', 'netmask', 'gateway', 'broadcast', 'network', 'dns-nameservers', 'dns-search',
  'dns-domain', 'dns-domain-search', 'dns-options', 'dns-sortlist', 'dns-opts']

network_interfaces__default: []
network_interfaces__group: []
network_interfaces__host: []

# The combination strategy below is highly nested hierarchy compliant and recommended (Example provided below)
# network_interfaces__host > network_interfaces__group > network_interfaces__default
network_interfaces__all: "{{
  [network_interfaces__default, network_interfaces__group, network_interfaces__host] |
  community.general.lists_mergeby('name', recursive=true, list_merge='prepend') |
  aybarsm.helper.unique_recursive(attributes='name', recurse='inet') | aybarsm.helper.unique_recursive(attributes='name', recurse='inet6') }}"

# network_interfaces__default:
#   - name: enp0s6
#     mount: auto
#   - name: vmbr0
#     inet:
#       - name: bridge-ports
#         value: enp0s6
#       - name: bridge-stp
#         value: "on"

# network_interfaces__group:
#   - name: vmbr0
#     mount: auto
#     inet:
#       - name: method
#         value: dhcp
#       - name: bridge-stp
#         value: "off"
#       - name: bridge-fd
#         value: 0

# network_interfaces__host:
#   - name: enp0s6
#     mount: None
#   - name: vmbr0
#     inet:
#       - name: method
#         value: static
#       - name: address
#         value: 10.255.255.2/24
#     inet6:
#       - name: method
#         value: static
#       - name: address
#         value: fdff::1/64

# !!!!! RESULT: !!!!!
# network_interfaces__all:
#   - name: enp0s6
#     mount: None # Replaced from default by host
#   - name: vmbr0
#     mount: auto # Merged from group
#     inet:
#       - name: method # Replaced from group by host
#         value: static
#       - name: address # Replaced from group by host
#         value: 10.255.255.2/24
#       - name: bridge-ports # Merged from default by group
#         value: enp0s6
#       - name: bridge-stp # Replaced from default by group
#         value: "off"
#       - name: bridge-fd # Merged from group
#         value: 0
#     inet6:
#       - name: method # Merged from host
#         value: static
#       - name: address # Merged from host
#         value: fdff::1/64
