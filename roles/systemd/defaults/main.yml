---
# Ensures system manager is systemd - ansible_service_mgr == "systemd"
systemd__ensure_service_manager: true
systemd_network_role_enabled: false

systemd__network_apply_changes: false

systemd__network_backup: true
systemd__network_cleanup: false
systemd__network_cleanup_patterns_use_regex: true

# Consult: https://manpages.debian.org/bookworm/systemd/systemd.net-naming-scheme.7.en.html
systemd__network_naming_scheme: "v252"

systemd__network_dir: /etc/systemd/network
systemd__network_template: network.j2

systemd__network_default: []
systemd__network_group: []
systemd__network_host: []
# The combination strategy below is highly nested hierarchy compliant and recommended
# systemd__network_host > systemd__network_group > systemd__network_default
systemd__network_all: "{{ (systemd__network_host + systemd__network_group + systemd__network_default) |
  selectattr('name', 'defined') | selectattr('name', 'search', '\\.(network|link|netdev)$') |
  selectattr('config', 'defined') | unique(attribute='name') }}"

systemd__network_names: "{{ systemd__network_all | map(attribute='name') }}"
# Escape file names defined in systemd__network_all
systemd__network_cleanup_regex:
  - "^({{ systemd__network_names | select('match', '.*\\.link$') | map('replace', '.link', '') | join('|') }})\\.link$"
  - "^({{ systemd__network_names | select('match', '.*\\.netdev$') | map('replace', '.netdev', '') | join('|') }})\\.netdev$"
  - "^({{ systemd__network_names | select('match', '.*\\.network$') | map('replace', '.network', '') | join('|') }})\\.network$"
# Escape backup files:
  - "^.*\\.\\d+\\.\\d{4}-\\d{2}-\\d{2}@\\d{2}:\\d{2}:\\d{2}~$"

# Join regex expressions
systemd__network_cleanup_patterns: ["(?!{{ systemd__network_cleanup_regex | join('|') }})"]
